{"version":3,"sources":["Spinner.js","SeasonDisplay.js","index.js"],"names":["Spinner","className","seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","this","React","Component","ReactDOM","render","document","querySelector"],"mappings":"8MAWeA,EATC,WACZ,OACE,qBAAKC,UAAU,mBAAf,SACE,qBAAKA,UAAU,qBAAf,4BCDFC,EAAe,CACnBC,OAAQ,CACNC,KAAM,qBACNC,SAAU,OAEZC,OAAQ,CACNF,KAAM,mBACNC,SAAU,cA2BCE,EAdO,SAAAC,GACpB,IAViBC,EAAKC,EAUhBC,GAVWF,EAUQD,EAAMC,KAVTC,GAUc,IAAIE,MAAOC,YATnC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAKD,EAEFP,EAAaS,GAAhCP,EAFqB,EAErBA,KAAMC,EAFe,EAEfA,SAGd,OACE,sBAAKJ,UAAS,yBAAoBU,GAAlC,UACE,mBAAGV,UAAS,4BAAuBI,EAAvB,WACZ,6BAAKD,IACL,mBAAGH,UAAS,6BAAwBI,EAAxB,eC3BZS,E,4MACFC,MAAQ,CAAEN,IAAM,KAAMO,aAAc,I,uDAEnC,WAAqB,IAAD,OACnBC,OAAOC,UAAUC,YAAYC,oBACvB,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAAEb,IAAKY,EAASE,OAAOC,cACjD,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAAEN,aAAcS,EAAIC,e,oBAKjD,WACE,OAAIC,KAAKZ,MAAMC,eAAiBW,KAAKZ,MAAMN,IAClC,0CAAakB,KAAKZ,MAAMC,iBAG5BW,KAAKZ,MAAMC,cAAgBW,KAAKZ,MAAMN,IAClC,cAAC,EAAD,CAAeA,IAAKkB,KAAKZ,MAAMN,MAG/B,cAAC,EAAD,Q,GApBGmB,IAAMC,WAyBxBC,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,cAAc,Y","file":"static/js/main.486c7fe7.chunk.js","sourcesContent":["import React from 'react';\r\n \r\nconst Spinner = () => {\r\n    return (\r\n      <div className=\"ui active dimmer\">\r\n        <div className=\"ui big text loader\">Loading....</div>\r\n      </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Spinner;","import './SeasonDisplay.css';\r\nimport './Spinner.js';\r\nimport React from 'react';\r\n\r\nconst seasonConfig = {\r\n  summer: {\r\n    text: \"Lets hit the beach\",\r\n    iconName: 'sun'\r\n  },\r\n  winter: {\r\n    text: 'Burr it is cold!',\r\n    iconName: 'snowflake'\r\n  }\r\n};\r\n\r\nconst getSeason = (lat, month) => {\r\n  if (month > 2 && month < 9) {\r\n    return lat > 0 ? 'summer' : 'winter';\r\n  }  else {\r\n    return lat > 0 ? 'winter' : 'summer';\r\n  }\r\n\r\n};\r\n\r\nconst SeasonDisplay = props => {\r\n  const season = getSeason(props.lat, new Date().getMonth());\r\n  const { text, iconName } = seasonConfig[season];\r\n  \r\n\r\n  return (\r\n    <div className={`season-display ${season}`}>\r\n      <i className={`icon-left massive ${iconName} icon`} />\r\n      <h1>{text}</h1>\r\n      <i className={`icon-right massive ${iconName} icon`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeasonDisplay;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay';\r\nimport Spinner from './Spinner';\r\n\r\n\r\nclass App extends React.Component {\r\n    state = { lat : null, errorMessage: '' };\r\n    \r\n     componentDidMount() {\r\n      window.navigator.geolocation.getCurrentPosition(\r\n            position => this.setState({ lat: position.coords.latitude }),\r\n            err => this.setState({ errorMessage: err.message })\r\n        \r\n          );\r\n        }\r\n       \r\n    render() {\r\n      if (this.state.errorMessage && !this.state.lat) {\r\n        return <div>Error: {this.state.errorMessage}</div>;\r\n      }\r\n    \r\n      if (!this.state.errorMessage && this.state.lat) {\r\n        return <SeasonDisplay lat={this.state.lat} />\r\n      }\r\n      \r\n       return  <Spinner/>;\r\n      \r\n    }\r\n}   \r\n\r\nReactDOM.render(<App/>,document.querySelector('#root')\r\n);   "],"sourceRoot":""}